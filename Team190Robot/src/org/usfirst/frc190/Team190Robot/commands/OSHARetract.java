// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc190.Team190Robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc190.Team190Robot.Robot;
import org.usfirst.frc190.Team190Robot.RobotMap;

/**
 *
 */
public class  OSHARetract extends Command {

    public OSHARetract() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        requires(Robot.oSHA);
        
        // TODO: Time this process
        this.setTimeout(10);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        Robot.oSHA.driveOSHA(Robot.oSHA.OSHAFreeRetractSpeed, false);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        if (this.isTimedOut())
        {
            System.out.println("OSHA Retract exited with Timeout");
            return true;
        }
        if (Robot.oSHA.getLowerLimit())
        {
            System.out.println("OSHA Retract exited with Limit");
            return true;
        }
        /*if (!Robot.oSHA.isTensioned())
        {
            Sy
            * stem.out.println("OSHA Retract exited with No Tension");
            return true;
        }*/
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.oSHA.driveOSHA(0, false);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
